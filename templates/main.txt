# fi: {name} sai {value} {unit} [{place, case=ssa}]
# fi: {name} sai {place, case=ssa} {value} {unit}
# en: {name} got {value} {unit} [in {place}]
# | what_type in {base}, what > 0, when_2 = 2017

# ---Group definitions---

# ${base}: total_votes, percentage_votes
# ${change}: percentage_votes_change, seats_change, total_votes_change
# ${vote_change}: percentage_votes_change, total_votes_change


# Regex example:

# fi: {name} sai {time} {value} {unit} [{place, case=ssa}]
# | what_type = .*_votes, what > 0, when_2 = 2017



fi: {where, case=ssa} tapahtui {time} {what} {what_type}
fi-head: {where, case=ssa} tapahtui {what} {what_type} {time}
en: in {where}, the variable {what_type} has value {what} between {when_1} - {when_2}
en-head: in {where}, the variable {what_type} has value {what} between {when_1} - {when_2}
| where_type = [MC], when_1 = when_2

# This can be used for rankings with non-change values
fi: {where, case=ssa} tapahtui {time} {what} {what_type}
fi-head: {where, case=ssa} tapahtui {what} {what_type} {time}
en: in {where}, the variable {what_type} has value {what} between {when_1} - {when_2}
en-head: in {where}, the variable {what_type} has value {what} between {when_1} - {when_2}
| where_type = [MC], what_type = .*(?<!_change)_grouped_by.*

fi: {where, case=ssa} {what} {what_type} {time, case=lla}
fi: {where, case=ssa} {what} {what_type} {time}
fi-head: {where, case=ssa} {what} {what_type} {time, case=lla}
fi-head: {where, case=ssa} {what} {what_type} {time}
en: in {where}, the variable {what_type} has value {what} between {when_1} - {when_2}
en: in {where}, the number of {what_type} {what} {when_1, prep=from} {when_2, prep=to} compared to other {what_type, type=comparison} # In Akaa, the number of car thefts increased/decreased by five (percent)/the most from 2011 to 2013 compared to other crimes/municipalities
en-head: in {where}, the variable {what_type} has value {what} between {when_1} - {when_2}
en-head: in {where}, the variable {what_type} has value {what} between {when_1} - {when_2}
| where_type = [MC], what_type = .*change.*, when_1 != when_2

fi: {where, case=ssa} {what} {what_type} {time}
fi-head: {where, case=ssa} {what} {what_type} {time}
| where_type = [MC], what_type = .*_mk_.*, when_1 != when_2
